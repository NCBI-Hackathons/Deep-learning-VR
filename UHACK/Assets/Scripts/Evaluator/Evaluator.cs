// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: evaluator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dlvr {

  /// <summary>Holder for reflection information generated from evaluator.proto</summary>
  public static partial class EvaluatorReflection {

    #region Descriptor
    /// <summary>File descriptor for evaluator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EvaluatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9ldmFsdWF0b3IucHJvdG8SBGRsdnIiLgoPRXZhbHVhdGVSZXF1ZXN0EhsK",
            "BmxheWVycxgBIAMoCzILLmRsdnIuTGF5ZXIi4gEKBUxheWVyEi0KC2NvbnZv",
            "bHV0aW9uGAEgASgLMhYuZGx2ci5Db252b2x1dGlvbkxheWVySAASJQoHZHJv",
            "cG91dBgCIAEoCzISLmRsdnIuRHJvcG91dExheWVySAASJQoHZmxhdHRlbhgD",
            "IAEoCzISLmRsdnIuRmxhdHRlbkxheWVySAASIQoFZGVuc2UYBCABKAsyEC5k",
            "bHZyLkRlbnNlTGF5ZXJIABIrCgptYXhwb29saW5nGAUgASgLMhUuZGx2ci5N",
            "YXhwb29saW5nTGF5ZXJIAEIMCgpkZWZpbml0aW9uIiMKEENvbnZvbHV0aW9u",
            "TGF5ZXISDwoHZmlsdGVycxgBIAEoAyIhCgxEcm9wb3V0TGF5ZXISEQoJZGlt",
            "ZW5zaW9uGAEgASgCIg4KDEZsYXR0ZW5MYXllciIdCgpEZW5zZUxheWVyEg8K",
            "B25ldXJvbnMYASABKAUiEQoPTWF4cG9vbGluZ0xheWVyIjIKDlByb2dyZXNz",
            "VXBkYXRlEhAKCGFjY3VyYWN5GAEgASgCEg4KBmVwb2NocxgCIAEoBTJICglF",
            "dmFsdWF0b3ISOwoIRXZhbHVhdGUSFS5kbHZyLkV2YWx1YXRlUmVxdWVzdBoU",
            "LmRsdnIuUHJvZ3Jlc3NVcGRhdGUiADABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dlvr.EvaluateRequest), global::Dlvr.EvaluateRequest.Parser, new[]{ "Layers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dlvr.Layer), global::Dlvr.Layer.Parser, new[]{ "Convolution", "Dropout", "Flatten", "Dense", "Maxpooling" }, new[]{ "Definition" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dlvr.ConvolutionLayer), global::Dlvr.ConvolutionLayer.Parser, new[]{ "Filters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dlvr.DropoutLayer), global::Dlvr.DropoutLayer.Parser, new[]{ "Dimension" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dlvr.FlattenLayer), global::Dlvr.FlattenLayer.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dlvr.DenseLayer), global::Dlvr.DenseLayer.Parser, new[]{ "Neurons" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dlvr.MaxpoolingLayer), global::Dlvr.MaxpoolingLayer.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dlvr.ProgressUpdate), global::Dlvr.ProgressUpdate.Parser, new[]{ "Accuracy", "Epochs" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EvaluateRequest : pb::IMessage<EvaluateRequest> {
    private static readonly pb::MessageParser<EvaluateRequest> _parser = new pb::MessageParser<EvaluateRequest>(() => new EvaluateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EvaluateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dlvr.EvaluatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluateRequest(EvaluateRequest other) : this() {
      layers_ = other.layers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluateRequest Clone() {
      return new EvaluateRequest(this);
    }

    /// <summary>Field number for the "layers" field.</summary>
    public const int LayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Dlvr.Layer> _repeated_layers_codec
        = pb::FieldCodec.ForMessage(10, global::Dlvr.Layer.Parser);
    private readonly pbc::RepeatedField<global::Dlvr.Layer> layers_ = new pbc::RepeatedField<global::Dlvr.Layer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dlvr.Layer> Layers {
      get { return layers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EvaluateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EvaluateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!layers_.Equals(other.layers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= layers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      layers_.WriteTo(output, _repeated_layers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += layers_.CalculateSize(_repeated_layers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EvaluateRequest other) {
      if (other == null) {
        return;
      }
      layers_.Add(other.layers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            layers_.AddEntriesFrom(input, _repeated_layers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Layer : pb::IMessage<Layer> {
    private static readonly pb::MessageParser<Layer> _parser = new pb::MessageParser<Layer>(() => new Layer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Layer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dlvr.EvaluatorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layer(Layer other) : this() {
      switch (other.DefinitionCase) {
        case DefinitionOneofCase.Convolution:
          Convolution = other.Convolution.Clone();
          break;
        case DefinitionOneofCase.Dropout:
          Dropout = other.Dropout.Clone();
          break;
        case DefinitionOneofCase.Flatten:
          Flatten = other.Flatten.Clone();
          break;
        case DefinitionOneofCase.Dense:
          Dense = other.Dense.Clone();
          break;
        case DefinitionOneofCase.Maxpooling:
          Maxpooling = other.Maxpooling.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layer Clone() {
      return new Layer(this);
    }

    /// <summary>Field number for the "convolution" field.</summary>
    public const int ConvolutionFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dlvr.ConvolutionLayer Convolution {
      get { return definitionCase_ == DefinitionOneofCase.Convolution ? (global::Dlvr.ConvolutionLayer) definition_ : null; }
      set {
        definition_ = value;
        definitionCase_ = value == null ? DefinitionOneofCase.None : DefinitionOneofCase.Convolution;
      }
    }

    /// <summary>Field number for the "dropout" field.</summary>
    public const int DropoutFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dlvr.DropoutLayer Dropout {
      get { return definitionCase_ == DefinitionOneofCase.Dropout ? (global::Dlvr.DropoutLayer) definition_ : null; }
      set {
        definition_ = value;
        definitionCase_ = value == null ? DefinitionOneofCase.None : DefinitionOneofCase.Dropout;
      }
    }

    /// <summary>Field number for the "flatten" field.</summary>
    public const int FlattenFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dlvr.FlattenLayer Flatten {
      get { return definitionCase_ == DefinitionOneofCase.Flatten ? (global::Dlvr.FlattenLayer) definition_ : null; }
      set {
        definition_ = value;
        definitionCase_ = value == null ? DefinitionOneofCase.None : DefinitionOneofCase.Flatten;
      }
    }

    /// <summary>Field number for the "dense" field.</summary>
    public const int DenseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dlvr.DenseLayer Dense {
      get { return definitionCase_ == DefinitionOneofCase.Dense ? (global::Dlvr.DenseLayer) definition_ : null; }
      set {
        definition_ = value;
        definitionCase_ = value == null ? DefinitionOneofCase.None : DefinitionOneofCase.Dense;
      }
    }

    /// <summary>Field number for the "maxpooling" field.</summary>
    public const int MaxpoolingFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dlvr.MaxpoolingLayer Maxpooling {
      get { return definitionCase_ == DefinitionOneofCase.Maxpooling ? (global::Dlvr.MaxpoolingLayer) definition_ : null; }
      set {
        definition_ = value;
        definitionCase_ = value == null ? DefinitionOneofCase.None : DefinitionOneofCase.Maxpooling;
      }
    }

    private object definition_;
    /// <summary>Enum of possible cases for the "definition" oneof.</summary>
    public enum DefinitionOneofCase {
      None = 0,
      Convolution = 1,
      Dropout = 2,
      Flatten = 3,
      Dense = 4,
      Maxpooling = 5,
    }
    private DefinitionOneofCase definitionCase_ = DefinitionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefinitionOneofCase DefinitionCase {
      get { return definitionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefinition() {
      definitionCase_ = DefinitionOneofCase.None;
      definition_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Layer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Layer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Convolution, other.Convolution)) return false;
      if (!object.Equals(Dropout, other.Dropout)) return false;
      if (!object.Equals(Flatten, other.Flatten)) return false;
      if (!object.Equals(Dense, other.Dense)) return false;
      if (!object.Equals(Maxpooling, other.Maxpooling)) return false;
      if (DefinitionCase != other.DefinitionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (definitionCase_ == DefinitionOneofCase.Convolution) hash ^= Convolution.GetHashCode();
      if (definitionCase_ == DefinitionOneofCase.Dropout) hash ^= Dropout.GetHashCode();
      if (definitionCase_ == DefinitionOneofCase.Flatten) hash ^= Flatten.GetHashCode();
      if (definitionCase_ == DefinitionOneofCase.Dense) hash ^= Dense.GetHashCode();
      if (definitionCase_ == DefinitionOneofCase.Maxpooling) hash ^= Maxpooling.GetHashCode();
      hash ^= (int) definitionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (definitionCase_ == DefinitionOneofCase.Convolution) {
        output.WriteRawTag(10);
        output.WriteMessage(Convolution);
      }
      if (definitionCase_ == DefinitionOneofCase.Dropout) {
        output.WriteRawTag(18);
        output.WriteMessage(Dropout);
      }
      if (definitionCase_ == DefinitionOneofCase.Flatten) {
        output.WriteRawTag(26);
        output.WriteMessage(Flatten);
      }
      if (definitionCase_ == DefinitionOneofCase.Dense) {
        output.WriteRawTag(34);
        output.WriteMessage(Dense);
      }
      if (definitionCase_ == DefinitionOneofCase.Maxpooling) {
        output.WriteRawTag(42);
        output.WriteMessage(Maxpooling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (definitionCase_ == DefinitionOneofCase.Convolution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Convolution);
      }
      if (definitionCase_ == DefinitionOneofCase.Dropout) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dropout);
      }
      if (definitionCase_ == DefinitionOneofCase.Flatten) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Flatten);
      }
      if (definitionCase_ == DefinitionOneofCase.Dense) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dense);
      }
      if (definitionCase_ == DefinitionOneofCase.Maxpooling) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Maxpooling);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Layer other) {
      if (other == null) {
        return;
      }
      switch (other.DefinitionCase) {
        case DefinitionOneofCase.Convolution:
          if (Convolution == null) {
            Convolution = new global::Dlvr.ConvolutionLayer();
          }
          Convolution.MergeFrom(other.Convolution);
          break;
        case DefinitionOneofCase.Dropout:
          if (Dropout == null) {
            Dropout = new global::Dlvr.DropoutLayer();
          }
          Dropout.MergeFrom(other.Dropout);
          break;
        case DefinitionOneofCase.Flatten:
          if (Flatten == null) {
            Flatten = new global::Dlvr.FlattenLayer();
          }
          Flatten.MergeFrom(other.Flatten);
          break;
        case DefinitionOneofCase.Dense:
          if (Dense == null) {
            Dense = new global::Dlvr.DenseLayer();
          }
          Dense.MergeFrom(other.Dense);
          break;
        case DefinitionOneofCase.Maxpooling:
          if (Maxpooling == null) {
            Maxpooling = new global::Dlvr.MaxpoolingLayer();
          }
          Maxpooling.MergeFrom(other.Maxpooling);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Dlvr.ConvolutionLayer subBuilder = new global::Dlvr.ConvolutionLayer();
            if (definitionCase_ == DefinitionOneofCase.Convolution) {
              subBuilder.MergeFrom(Convolution);
            }
            input.ReadMessage(subBuilder);
            Convolution = subBuilder;
            break;
          }
          case 18: {
            global::Dlvr.DropoutLayer subBuilder = new global::Dlvr.DropoutLayer();
            if (definitionCase_ == DefinitionOneofCase.Dropout) {
              subBuilder.MergeFrom(Dropout);
            }
            input.ReadMessage(subBuilder);
            Dropout = subBuilder;
            break;
          }
          case 26: {
            global::Dlvr.FlattenLayer subBuilder = new global::Dlvr.FlattenLayer();
            if (definitionCase_ == DefinitionOneofCase.Flatten) {
              subBuilder.MergeFrom(Flatten);
            }
            input.ReadMessage(subBuilder);
            Flatten = subBuilder;
            break;
          }
          case 34: {
            global::Dlvr.DenseLayer subBuilder = new global::Dlvr.DenseLayer();
            if (definitionCase_ == DefinitionOneofCase.Dense) {
              subBuilder.MergeFrom(Dense);
            }
            input.ReadMessage(subBuilder);
            Dense = subBuilder;
            break;
          }
          case 42: {
            global::Dlvr.MaxpoolingLayer subBuilder = new global::Dlvr.MaxpoolingLayer();
            if (definitionCase_ == DefinitionOneofCase.Maxpooling) {
              subBuilder.MergeFrom(Maxpooling);
            }
            input.ReadMessage(subBuilder);
            Maxpooling = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConvolutionLayer : pb::IMessage<ConvolutionLayer> {
    private static readonly pb::MessageParser<ConvolutionLayer> _parser = new pb::MessageParser<ConvolutionLayer>(() => new ConvolutionLayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConvolutionLayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dlvr.EvaluatorReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvolutionLayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvolutionLayer(ConvolutionLayer other) : this() {
      filters_ = other.filters_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvolutionLayer Clone() {
      return new ConvolutionLayer(this);
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 1;
    private long filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConvolutionLayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConvolutionLayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filters != other.Filters) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Filters != 0L) hash ^= Filters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Filters != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Filters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Filters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Filters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConvolutionLayer other) {
      if (other == null) {
        return;
      }
      if (other.Filters != 0L) {
        Filters = other.Filters;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Filters = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DropoutLayer : pb::IMessage<DropoutLayer> {
    private static readonly pb::MessageParser<DropoutLayer> _parser = new pb::MessageParser<DropoutLayer>(() => new DropoutLayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropoutLayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dlvr.EvaluatorReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropoutLayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropoutLayer(DropoutLayer other) : this() {
      dimension_ = other.dimension_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropoutLayer Clone() {
      return new DropoutLayer(this);
    }

    /// <summary>Field number for the "dimension" field.</summary>
    public const int DimensionFieldNumber = 1;
    private float dimension_;
    /// <summary>
    /// dimension represents the amount of data to drop.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Dimension {
      get { return dimension_; }
      set {
        dimension_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropoutLayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropoutLayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Dimension, other.Dimension)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dimension != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Dimension);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Dimension != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Dimension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dimension != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropoutLayer other) {
      if (other == null) {
        return;
      }
      if (other.Dimension != 0F) {
        Dimension = other.Dimension;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Dimension = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FlattenLayer : pb::IMessage<FlattenLayer> {
    private static readonly pb::MessageParser<FlattenLayer> _parser = new pb::MessageParser<FlattenLayer>(() => new FlattenLayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlattenLayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dlvr.EvaluatorReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlattenLayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlattenLayer(FlattenLayer other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlattenLayer Clone() {
      return new FlattenLayer(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlattenLayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlattenLayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlattenLayer other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DenseLayer : pb::IMessage<DenseLayer> {
    private static readonly pb::MessageParser<DenseLayer> _parser = new pb::MessageParser<DenseLayer>(() => new DenseLayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DenseLayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dlvr.EvaluatorReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenseLayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenseLayer(DenseLayer other) : this() {
      neurons_ = other.neurons_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenseLayer Clone() {
      return new DenseLayer(this);
    }

    /// <summary>Field number for the "neurons" field.</summary>
    public const int NeuronsFieldNumber = 1;
    private int neurons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Neurons {
      get { return neurons_; }
      set {
        neurons_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DenseLayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DenseLayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Neurons != other.Neurons) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Neurons != 0) hash ^= Neurons.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Neurons != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Neurons);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Neurons != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Neurons);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DenseLayer other) {
      if (other == null) {
        return;
      }
      if (other.Neurons != 0) {
        Neurons = other.Neurons;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Neurons = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MaxpoolingLayer : pb::IMessage<MaxpoolingLayer> {
    private static readonly pb::MessageParser<MaxpoolingLayer> _parser = new pb::MessageParser<MaxpoolingLayer>(() => new MaxpoolingLayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaxpoolingLayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dlvr.EvaluatorReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxpoolingLayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxpoolingLayer(MaxpoolingLayer other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxpoolingLayer Clone() {
      return new MaxpoolingLayer(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaxpoolingLayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaxpoolingLayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaxpoolingLayer other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ProgressUpdate : pb::IMessage<ProgressUpdate> {
    private static readonly pb::MessageParser<ProgressUpdate> _parser = new pb::MessageParser<ProgressUpdate>(() => new ProgressUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProgressUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dlvr.EvaluatorReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressUpdate(ProgressUpdate other) : this() {
      accuracy_ = other.accuracy_;
      epochs_ = other.epochs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressUpdate Clone() {
      return new ProgressUpdate(this);
    }

    /// <summary>Field number for the "accuracy" field.</summary>
    public const int AccuracyFieldNumber = 1;
    private float accuracy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Accuracy {
      get { return accuracy_; }
      set {
        accuracy_ = value;
      }
    }

    /// <summary>Field number for the "epochs" field.</summary>
    public const int EpochsFieldNumber = 2;
    private int epochs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Epochs {
      get { return epochs_; }
      set {
        epochs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProgressUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProgressUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Accuracy, other.Accuracy)) return false;
      if (Epochs != other.Epochs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Accuracy != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Accuracy);
      if (Epochs != 0) hash ^= Epochs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Accuracy != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Accuracy);
      }
      if (Epochs != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Epochs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Accuracy != 0F) {
        size += 1 + 4;
      }
      if (Epochs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Epochs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProgressUpdate other) {
      if (other == null) {
        return;
      }
      if (other.Accuracy != 0F) {
        Accuracy = other.Accuracy;
      }
      if (other.Epochs != 0) {
        Epochs = other.Epochs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Accuracy = input.ReadFloat();
            break;
          }
          case 16: {
            Epochs = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
